name: Rust tests

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  CARGO_TERM_COLOR: always

jobs:

  cancel-others:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  test-matrix-sdk-features:
    name: üêß [m], ${{ matrix.name }}
    if: github.event_name == 'push' || !github.event.pull_request.draft

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        name:
          - no-encryption
          - no-sled
          - no-encryption-and-sled
          - sled-cryptostore
          - rustls-tls
          - markdown
          - socks
          - sso-login

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Load cache
        uses: Swatinem/rust-cache@v1

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p xtask -- ci test-features ${{ matrix.name }}

  test-matrix-sdk-examples:
    name: üêß [m]-examples
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || !github.event.pull_request.draft

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Load cache
      uses: Swatinem/rust-cache@v1

    - name: Install nextest
      uses: taiki-e/install-action@nextest

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: run
        args: -p xtask -- ci examples

  test-matrix-sdk-crypto:
    name: üêß [m]-crypto
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || !github.event.pull_request.draft

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Load cache
      uses: Swatinem/rust-cache@v1

    - name: Install nextest
      uses: taiki-e/install-action@nextest

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: run
        args: -p xtask -- ci test-crypto

  test-all-crates:
    name: ${{ matrix.name }}
    if: github.event_name == 'push' || !github.event.pull_request.draft

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: üêß all crates, ü¶Ä stable
            rust: stable
            os: ubuntu-latest

          - name: üêß all crates, ü¶Ä beta
            rust: beta
            os: ubuntu-latest

          - name: üçè all crates, ü¶Ä stable
            rust: stable
            os: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Load cache
        uses: Swatinem/rust-cache@v1

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --workspace --exclude matrix-sdk-integration-testing

      - name: Test documentation
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc

  test-wasm:
    name: üï∏Ô∏è ${{ matrix.name }}
    if: github.event_name == 'push' || !github.event.pull_request.draft

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: '[m]-qrcode'
            cmd: matrix-sdk-qrcode

          - name: '[m]-base'
            cmd: matrix-sdk-base

          - name: '[m]-common'
            cmd: matrix-sdk-common

          - name: '[m]-indexeddb, no crypto'
            cmd: indexeddb-no-crypto

          - name: '[m]-indexeddb, with crypto'
            cmd: indexeddb-with-crypto

          - name: '[m], no-default, wasm-flags'
            cmd: matrix-sdk-no-default

          - name: '[m], indexeddb stores'
            cmd: matrix-sdk-indexeddb-stores

          - name: '[m], indexeddb stores, no crypto'
            cmd: matrix-sdk-indexeddb-stores-no-crypto

          - name: '[m], wasm-example'
            cmd: matrix-sdk-command-bot

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          components: clippy
          profile: minimal
          override: true

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: latest

      - name: Load cache
        uses: Swatinem/rust-cache@v1

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Rust Check
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p xtask -- ci wasm ${{ matrix.cmd }}

      - name: Wasm-Pack test
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p xtask -- ci wasm-pack ${{ matrix.cmd }}

  integration-tests:
    name: Integration test
    if: github.event_name == 'push' || !github.event.pull_request.draft

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Load cache
        uses: Swatinem/rust-cache@v1

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: gnunicorn/setup-matrix-synapse@main
        with:
          uploadLogs: true
          httpPort: 8228
          disableRateLimiting: true
          serverName: "matrix-sdk.rs"

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run -p matrix-sdk-integration-testing
