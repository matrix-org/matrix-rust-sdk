name: Create Crypto-NodeJS Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New NodeJS SemVer version to create'
        required: true 
        type: string
      previous_version:
        description: 'The old SemVer Version (as used in the tag)'
        required: true 
        type: string

env:
  PKG_PATH: "bindings/matrix-sdk-crypto-nodejs"
  TAG_PREFIX: "matrix-sdk-crypto-nodejs-v"

jobs:
  prepare-release:
    name: "Package nodejs package"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate a changelog for upload
        uses: orhun/git-cliff-action@v1
        with:
          config: "${{ env.PKG_PATH }}/cliff.toml"
          args: --strip header "${{env.TAG_PREFIX}}${{ inputs.previous_version }}..HEAD"
        env:
          GIT_CLIFF_TAG: "Changes ${{ inputs.previous_version }} -> ${{ inputs.version }}"
          GIT_CLIFF_OUTPUT: "${{ env.PKG_PATH }}/CHANGES-${{ inputs.version }}.md"

      - name: Update existing Changelog
        uses: orhun/git-cliff-action@v1
        with:
          config: "${{ env.PKG_PATH }}/cliff.toml"
          args: "${{ inputs.previous_version }}..HEAD"
        env:
          GIT_CLIFF_TAG: "${{ inputs.version }}"
          GIT_CLIFF_PREPEND: "${{ env.PKG_PATH }}/CHANGELOG.md"
      - name: Set version
        id: package_version
        uses: KageKirin/set-node-package-version@v0
        with:
          version: ${{ inputs.version }}

      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "Tagging Crypto-NodeJS for release"
          tag: "${{env.TAG_PREFIX}}${{ inputs.version }}"
          new_banch: "gh-action/release-${{ env.TAG_PREFIX }}${{ inputs.version }}"
          push: true
          add: |
            ${{ env.PKG_PATH }}/package.json
            ${{ env.PKG_PATH }}/CHANGELOG.md
      - name: Put changes into release notes
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_PREFIX }}${{ inputs.version }}
          body_path: "${{ env.PKG_PATH }}/CHANGES-${{ inputs.version }}.md"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: "gh-action/release-${{ env.TAG_PREFIX }}${{ inputs.version }}"
          title: "Preparing Release ${{ env.TAG_PREFIX }}${{ inputs.version }}"
          body: |
            Automatic Pull-Request to merge release ${{ env.TAG_PREFIX }}${{ inputs.version }} back into main
