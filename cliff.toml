# This git-cliff configuration file is used to generate release reports.

[changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        {% set_global commit_message = commit.message -%}
        {% set_global breaking = commit.breaking -%}
        {% for footer in commit.footers -%}
            {% if footer.token | lower  == "changelog" -%}
                {% set_global commit_message = footer.value -%}
            {% elif footer.token | lower  == "breaking-change" -%}
                {% set_global commit_message = footer.value -%}
            {% elif footer.token | lower == "security-impact" -%}
                {% set_global security_impact = footer.value -%}
            {% elif footer.token | lower == "cve" -%}
                {% set_global cve = footer.value -%}
            {% elif footer.token | lower == "github-advisory" -%}
                {% set_global github_advisory = footer.value -%}
            {% endif -%}
        {% endfor -%}
        - {% if breaking %}[**breaking**] {% endif %}{{ commit_message | upper_first }}
          {% if security_impact -%}
              (\
              *{{ security_impact | upper_first }}*\
              {% if cve -%}, [{{ cve | upper }}](https://www.cve.org/CVERecord?id={{ cve }}){% endif -%}\
              {% if github_advisory -%}, [{{ github_advisory | upper }}](https://github.com/matrix-org/matrix-rust-sdk/security/advisories/{{ github_advisory }}){% endif -%}
              )
          {% endif -%}
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# regex for preprocessing the commit messages
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/matrix-org/matrix-rust-sdk/pull/${2}))"},
]
# regex for parsing and grouping commits
commit_parsers = [
    { footer = "Security-Impact:", group = "Security" },
    { footer = "CVE:", group = "Security" },
    { footer = "GitHub-Advisory:", group = "Security" },
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactor" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore", skip = true },
    { message = "^style", group = "Styling", skip = true },
    { message = "^test", skip = true },
    { message = "^ci", skip = true },
]
# forbid parsers from skipping breaking changes
protect_breaking_commits = true
# filter out the commits that are not matched by commit parsers
filter_commits = true
# glob pattern for matching git tags
tag_pattern = "[0-9]*"
# regex for skipping tags
skip_tags = ""
# regex for ignoring tags
ignore_tags = ""
# sort the tags chronologically
date_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
