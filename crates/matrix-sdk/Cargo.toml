[package]
authors = ["Damir JeliÄ‡ <poljar@termina.org.uk>"]
description = "A high level Matrix client-server library."
edition = "2021"
homepage = "https://github.com/matrix-org/matrix-rust-sdk"
keywords = ["matrix", "chat", "messaging", "ruma", "nio"]
license = "Apache-2.0"
name = "matrix-sdk"
readme = "README.md"
repository = "https://github.com/matrix-org/matrix-rust-sdk"
rust-version = { workspace = true }
version = "0.8.0"

[package.metadata.docs.rs]
features = ["docsrs"]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["e2e-encryption", "automatic-room-key-forwarding", "sqlite", "native-tls"]
testing = ["matrix-sdk-sqlite?/testing", "matrix-sdk-indexeddb?/testing", "matrix-sdk-base/testing", "wiremock", "matrix-sdk-test", "assert_matches2"]

e2e-encryption = [
    "matrix-sdk-base/e2e-encryption",
    "matrix-sdk-sqlite?/crypto-store",        # activate crypto-store on sqlite if given
    "matrix-sdk-indexeddb?/e2e-encryption",   # activate on indexeddb if given
]
js = ["matrix-sdk-common/js", "matrix-sdk-base/js"]

sqlite = [
    "dep:matrix-sdk-sqlite",
    "matrix-sdk-sqlite?/state-store",
    "matrix-sdk-sqlite?/event-cache"
]
bundled-sqlite = ["sqlite", "matrix-sdk-sqlite?/bundled"]
indexeddb = ["matrix-sdk-indexeddb/state-store"]

qrcode = ["e2e-encryption", "matrix-sdk-base/qrcode"]
automatic-room-key-forwarding = ["e2e-encryption", "matrix-sdk-base/automatic-room-key-forwarding"]
markdown = ["ruma/markdown"]
native-tls = ["reqwest/native-tls"]
rustls-tls = ["reqwest/rustls-tls"]
socks = ["reqwest/socks"]
sso-login = ["dep:axum", "dep:rand", "dep:tower"]

uniffi = ["dep:uniffi", "matrix-sdk-base/uniffi", "dep:matrix-sdk-ffi-macros"]

experimental-oidc = [
    "ruma/unstable-msc2967",
    "ruma/unstable-msc4108",
    "dep:chrono",
    "dep:language-tags",
    "dep:mas-oidc-client",
    "dep:rand",
    "dep:sha2",
    "dep:tower",
    "dep:openidconnect",
]
experimental-sliding-sync = [
    "matrix-sdk-base/experimental-sliding-sync",
    "reqwest/gzip",
]
experimental-widgets = ["dep:language-tags", "dep:uuid"]

docsrs = ["e2e-encryption", "sqlite", "indexeddb", "sso-login", "qrcode"]

[dependencies]
anyhow = { workspace = true, optional = true }
anymap2 = "0.13.0"
aquamarine = { workspace = true }
assert_matches2 = { workspace = true, optional = true }
as_variant = { workspace = true }
async-channel = "2.3.1"
async-stream = { workspace = true }
async-trait = { workspace = true }
axum = { version = "0.7.9", optional = true }
bytes = "1.8.0"
bytesize = "1.3"
chrono = { workspace = true, optional = true }
event-listener = "5.3.1"
eyeball = { workspace = true }
eyeball-im = { workspace = true }
eyre = { version = "0.6.12", optional = true }
futures-core = { workspace = true }
futures-util = { workspace = true }
growable-bloom-filter = { workspace = true }
http = { workspace = true }
imbl = { workspace = true, features = ["serde"] }
indexmap = { workspace = true }
js_int = "0.2.2"
language-tags = { version = "0.3.2", optional = true }
mas-oidc-client = { version = "0.11.0", default-features = false, optional = true }
matrix-sdk-base = { workspace = true }
matrix-sdk-common = { workspace = true }
matrix-sdk-ffi-macros = { workspace = true, optional = true }
matrix-sdk-indexeddb = { workspace = true, optional = true }
matrix-sdk-sqlite = { workspace = true, optional = true }
matrix-sdk-test = { workspace = true, optional = true }
mime = { workspace = true }
mime2ext = "0.1.53"
once_cell = { workspace = true }
pin-project-lite = { workspace = true }
rand = { workspace = true , optional = true }
ruma = { workspace = true, features = ["rand", "unstable-msc2448", "unstable-msc2965", "unstable-msc3930", "unstable-msc3245-v1-compat", "unstable-msc2867"] }
serde = { workspace = true }
serde_html_form = { workspace = true }
serde_json = { workspace = true }
sha2 = { workspace = true, optional = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio-stream = { workspace = true, features = ["sync"] }
tower = { version = "0.5.1", features = ["util"], optional = true }
tracing = { workspace = true, features = ["attributes"] }
uniffi = { workspace = true, optional = true }
url = { workspace = true, features = ["serde"] }
urlencoding = "2.1.3"
uuid = { workspace = true, features = ["serde", "v4"], optional = true }
vodozemac = { workspace = true }
zeroize = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
gloo-timers = { workspace = true, features = ["futures"] }
reqwest = { workspace = true }
tokio = { workspace = true, features = ["macros"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
backoff = { version = "0.4.0", features = ["tokio"] }
openidconnect = { version = "4.0.0-rc.1", optional = true }
# only activate reqwest's stream feature on non-wasm, the wasm part seems to not
# support *sending* streams, which makes it useless for us.
reqwest = { workspace = true, features = ["stream"] }
tokio = { workspace = true, features = ["fs", "rt", "macros"] }
tokio-util = "0.7.12"
wiremock = { workspace = true, optional = true }

[dev-dependencies]
anyhow = { workspace = true }
assert-json-diff = { workspace = true }
assert_matches = { workspace = true }
assert_matches2 = { workspace = true }
dirs = "5.0.1"
futures-executor = { workspace = true }
matrix-sdk-base = { workspace = true, features = ["testing"] }
matrix-sdk-test = { workspace = true }
serde_urlencoded = "0.7.1"
similar-asserts = { workspace = true }
stream_assert = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tokio-test = "0.4.4"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
proptest = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread", "macros"] }
wiremock = { workspace = true }

[[test]]
name = "integration"
required-features = ["testing"]

[lints]
workspace = true
