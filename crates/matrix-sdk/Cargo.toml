[package]
authors = ["Damir JeliÄ‡ <poljar@termina.org.uk>"]
description = "A high level Matrix client-server library."
edition = "2021"
homepage = "https://github.com/matrix-org/matrix-rust-sdk"
keywords = ["matrix", "chat", "messaging", "ruma", "nio"]
license = "Apache-2.0"
name = "matrix-sdk"
readme = "README.md"
repository = "https://github.com/matrix-org/matrix-rust-sdk"
rust-version = "1.56"
version = "0.4.1"

[package.metadata.docs.rs]
features = ["docsrs"]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = [
    "encryption",
    "sled-crypto-store",
    "sled-state-store",
    "native-tls"
]

indexeddb-state-store = ["matrix-sdk-indexeddb"]
indexeddb-crypto-store = ["matrix-sdk-indexeddb/encryption", "encryption"]
encryption = ["matrix-sdk-base/encryption"]
qrcode = ["encryption", "matrix-sdk-base/qrcode"]
# TODO merge those two sled features
sled-state-store = ["matrix-sdk-sled/state-store"]
sled-crypto-store = ["matrix-sdk-sled/crypto-store", "encryption"]
markdown = ["ruma/markdown"]
native-tls = ["reqwest/native-tls"]
rustls-tls = ["reqwest/rustls-tls"]
socks = ["reqwest/socks"]
sso-login = ["warp", "rand", "tokio-stream"]
appservice = ["ruma/appservice-api-s", "ruma/appservice-api-helper"]
image-proc = ["image"]
image-rayon = ["image-proc", "image/jpeg_rayon"]

docsrs = [
    "encryption",
    "sled-crypto-store",
    "sled-state-store",
    "sso-login",
    "qrcode",
    "image-proc",
]

[dependencies]
anyhow = { version = "1.0.57", optional = true }
anymap2 = "0.13.0"
bytes = "1.1.0"
dashmap = "5.2.0"
event-listener = "2.5.2"
eyre = { version = "0.6.8", optional = true }
futures-core = "0.3.21"
futures-util = { version = "0.3.21", default-features = false }
http = "0.2.6"
matrix-sdk-common = { version = "0.4.0", path = "../matrix-sdk-common" }
mime = "0.3.16"
rand = { version = "0.8.5", optional = true }
serde = "1.0.136"
serde_json = "1.0.79"
thiserror = "1.0.30"
tracing = "0.1.34"
url = "2.2.2"
zeroize = "1.3.0"
async-stream = "0.3.3"

matrix-sdk-sled = { path = "../matrix-sdk-sled", default-features = false, optional = true }
matrix-sdk-indexeddb = { path = "../matrix-sdk-indexeddb", default-features = false, optional = true }

[dependencies.image]
version = "0.24.2"
default-features = false
features = [
    "gif",
    "jpeg",
    "ico",
    "png",
    "pnm",
    "tga",
    "tiff",
    "webp",
    "bmp",
    "hdr",
    "dxt",
    "dds",
    "farbfeld",
]
optional = true

[dependencies.matrix-sdk-base]
version = "0.4.0"
path = "../matrix-sdk-base"
default_features = false

[dependencies.reqwest]
version = "0.11.10"
default_features = false

[dependencies.ruma]
git = "https://github.com/ruma/ruma"
rev = "4014e6959"
features = ["client-api-c", "compat", "rand", "unstable-msc2448"]

[dependencies.tokio-stream]
version = "0.1.8"
features = ["net"]
optional = true

[dependencies.warp]
version = "0.3.2"
default-features = false
optional = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-timer= "0.2.5"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.backoff]
version = "0.4.0"
features = ["tokio"]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.tokio]
version = "1.17.0"
default-features = false
features = ["fs", "rt"]

[dev-dependencies]
anyhow = "1.0.57"
dirs = "4.0.0"
futures = { version = "0.3.21", default-features = false, features = ["executor"] }
matches = "0.1.9"
matrix-sdk-test = { version = "0.4.0", path = "../matrix-sdk-test" }
mockito = "0.31.0"
once_cell = "1.10.0"
serde_json = "1.0.79"
tempfile = "3.3.0"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }


[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies.tokio]
version = "1.17.0"
default-features = false
features = ["rt-multi-thread", "macros"]

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.30"

[[example]]
name = "cross_signing_bootstrap"
required-features = ["encryption"]

[[example]]
name = "emoji_verification"
required-features = ["encryption"]

[[example]]
name = "timeline"
required-features = ["sled-state-store"]
